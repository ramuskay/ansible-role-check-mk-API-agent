- name: Install check_mk package for RedHat base or Debian Base not URL
  package:
    name: "{{ item }}"
    state: present
    disable_gpg_check: true
    validate_certs: "{{ check_mk_certs_trust }}"
  with_items:
    - "{{ check_mk_package }}"
  when: ansible_os_family == 'RedHat' or check_mk_package is not match("^http.*") 
  
- name: Install check_mk package for Debian base with URL
  package:
    deb: "{{ item }}"
    state: present
    force: yes
  with_items:
    - "{{ check_mk_package }}"
  when: ansible_os_family == 'Debian' and check_mk_package is match("^http.*") 

- name: Retrieve service facts
  service_facts:


- name: systemd socket activation for 2.1+
  block:
  - name: Start and enable check-mk-agent-async.service
    systemd:
      name: check-mk-agent-async.service
      daemon_reload: true
      state: started
      enabled: true

  - name: Verif file legacy
    stat:
      path: /var/lib/cmk-agent/allow-legacy-pull
    register: stat_result

  - name: Enable legacy mode
    file:
      path: /var/lib/cmk-agent/allow-legacy-pull
      mode: '0644'
      state: touch
    when: not stat_result.stat.exists
    notify: restart checkmk

  when: ansible_facts.services['check-mk-agent-async.service'] is defined

- name: systemd socket activation for 2.0 or earlier
  block:
  - name: Start and enable check_mk-async.service
    systemd:
      name: check_mk-async.service
      daemon_reload: true
      state: started
      enabled: true

  when: ansible_facts.services['check_mk-async.service'] is defined

- name: open Firewall RHEL base
  firewalld:
    port: 6556/tcp
    permanent: yes
    state: enabled
  notify: restart firewalld
  when: check_mk_firewall and ansible_os_family == 'RedHat'

- name: open Firewall Debian
  ufw:
    rule: allow
    port: 6556
    proto: tcp
  when: check_mk_firewall and ansible_os_family == 'Debian'

- name: Add local check with file
  copy: 
    src: "{{ item.src }}"
    dest:  /usr/lib/check_mk_agent/local/
    mode: '0744'
  loop: "{{ check_mk_local_checks }}"
  when: check_mk_local_checks is defined and item.src is defined


- name: Add local check with URL
  get_url:
    url: "{{ item.url }}"
    dest: /usr/lib/check_mk_agent/local/
    mode: '0744'
    validate_certs: "{{ check_mk_certs_trust }}"
  loop: "{{ check_mk_local_checks }}"
  when: check_mk_local_checks is defined and item.url is defined


- name: Add host to check_mk server
  check_mk:
    hostname: "{{ check_mk_api_hostname }}"
    url: "{{ check_mk_api_url }}"
    username: "{{ check_mk_api_username }}"
    secret: "{{ check_mk_api_secret }}"
    attributes: "{{ check_mk_api_attributes | default(omit) }}"
    state: "{{ check_mk_api_state | default(omit) }}"
    folder: "{{ check_mk_api_folder | default(omit) }}"
    activate_changes: "{{ check_mk_api_activate_changes | default(omit) }}"
    discover_services: "{{ check_mk_api_discover_services | default(omit) }}"
    trustcerts: "{{ check_mk_certs_trust | default(omit) }}"
  delegate_to: localhost
  when: check_mk_api_add_host